<RadzenDataGrid @ref="dataGrid" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="true" Data="@currentMatch.Scores" TItem="Score"
                ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" Style="height:300px">
    <Columns>
        <RadzenDataGridColumn TItem="Score" Property="DateTime" Title="Time" />
        <RadzenDataGridColumn TItem="Score" Property="Scorer" Title="Scorer" Frozen="true">
            <FooterTemplate>
                Points: <b>@counter(currentMatch)</b>
            </FooterTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Score" Property="Assist" Title="Assist" Frozen="true" />

    </Columns>
</RadzenDataGrid>

@code {
    [Parameter]
    public Match currentMatch{ get; set; }

    [Parameter]
    public RadzenDataGrid<Score> dataGrid{ get; set; }

    public void Reload()
    {
        dataGrid.Reload();
    }

    public string counter(Match currentMatch)
    {
        int teamACount = currentMatch.Scores.Where(Score => (currentMatch.Team1.Players.Contains(Score.Scorer))).ToList().Count;
        int teamBCount = currentMatch.Scores.Where(Score => (currentMatch.Team2.Players.Contains(Score.Scorer))).ToList().Count;
        return $"{teamACount} : {teamBCount}";
    }
}
