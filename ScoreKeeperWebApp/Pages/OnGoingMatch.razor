@page "/currentmatch"
@inject NavigationManager UriHelper

<h3>OnGoingMatch</h3>
@currentMatch.Team1.TeamName
Scorer:
<PlayerSelect @ref="playerA" PlayerList="playersA" @bind-SelectedPlayer="scorer"></PlayerSelect>
Assist:
<PlayerSelect @ref="playerB" PlayerList="playersA" @bind-SelectedPlayer="assist"></PlayerSelect>

<RadzenButton Click=@(args => AddToScoreA()) Text="Add" Style="margin-bottom: 20px; width: 150px" />

@currentMatch.Team2.TeamName
Scorer:
<PlayerSelect @ref="playerC" PlayerList="playersB" @bind-SelectedPlayer="scorer"></PlayerSelect>
Assist:
<PlayerSelect @ref="playerD" PlayerList="playersB" @bind-SelectedPlayer="assist"></PlayerSelect>

<RadzenButton Click=@(args => AddToScoreB()) Text="Add" Style="margin-bottom: 20px; width: 150px" />

<TeamScoreDataGrid currentMatch=@Data.DataHandler.CurrentMatch @ref="dataGrid"/>

<RadzenButton Click=@(args => RemoveLast()) Text="Undo" Style="margin-bottom: 20px; width: 150px" />
<RadzenButton Click=@(args => MatchOver()) Text="Match Over" Style="margin-bottom: 20px; width: 150px" />


@code {
    TeamScoreDataGrid dataGrid;
    PlayerSelect playerA;
    PlayerSelect playerB;
    PlayerSelect playerC;
    PlayerSelect playerD;
    public static Match currentMatch = Data.DataHandler.CurrentMatch;
    List<Player> playersA = currentMatch.Team1.Players;
    List<Player> playersB = currentMatch.Team2.Players;
    Player scorer;
    Player assist;

    void AddToScoreA()
    {
        if (scorer != null)
        {
            Score score = new Score();
            score.Scorer = scorer;
            score.Assist = assist;
            score.DateTime = DateTime.Now;
            currentMatch.Scores.Add(score);
            dataGrid.Reload();
        }



    }

    void AddToScoreB()
    {
        if (scorer != null)
        {
            Score score = new Score();
            score.Scorer = scorer;
            score.Assist = assist;
            score.DateTime = DateTime.Now;
            currentMatch.Scores.Add(score);
            dataGrid.Reload();
        }


    }

    void RemoveLast()
    {
        if (currentMatch.Scores.Count > 0)
        {
            currentMatch.Scores.RemoveAt(currentMatch.Scores.Count - 1);
            dataGrid.Reload();
        }

    }

    void MatchOver()
    {
        Data.DataHandler.savedMatches.Add(currentMatch);

        UriHelper.NavigateTo("/");

    }

}
